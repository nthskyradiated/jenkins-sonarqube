- name: Add Jenkins repo key
  ansible.builtin.get_url:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    dest: /usr/share/keyrings/jenkins-keyring.asc
    mode: '0644'

- name: Add Jenkins repository
  ansible.builtin.apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/
    state: present
    filename: jenkins.list

- name: Update system packages
  ansible.builtin.apt:
    update_cache: true

- name: Install Jenkins and dependencies
  ansible.builtin.apt:
    name:
      - jenkins
      - fontconfig
      - ca-certificates
      - gnupg
      - lsb-release
    state: present
    update_cache: true

- name: Ensure AWS CLI is installed
  ansible.builtin.shell: |
    if ! command -v aws &> /dev/null; then
      echo "AWS CLI not found. Installing..."
      curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      unzip awscliv2.zip
      sudo ./aws/install
    else
      echo "AWS CLI is already installed. Updating..."
      sudo ./aws/install --update
    fi
  args:
    creates: /usr/local/aws-cli/v2/current

- name: Start and enable Jenkins service
  ansible.builtin.systemd:
    name: jenkins
    state: started
    enabled: true

- name: Ensure .aws directory exists for Jenkins user
  ansible.builtin.file:
    path: /var/lib/jenkins/.aws
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0700'

- name: Configure AWS credentials for Jenkins
  ansible.builtin.copy:
    dest: /var/lib/jenkins/.aws/credentials
    content: |
      [default]
      aws_access_key_id = {{ aws_access_key_id }}
      aws_secret_access_key = {{ aws_secret_access_key }}
    mode: '0600'

- name: Remove existing backups-s3 directory if it exists
  ansible.builtin.file:
    path: /var/lib/jenkins/backups-s3
    state: absent

- name: Create S3 mount point
  ansible.builtin.file:
    path: /mnt/s3
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0755'

- name: Ensure Jenkins has access to S3
  ansible.builtin.command: aws s3api put-bucket-acl --bucket {{ s3_bucket_name }} --acl public-read
  args:
    creates: /var/lib/jenkins/.aws/credentials

- name: Check if /mnt/s3 exists
  ansible.builtin.stat:
    path: /mnt/s3
  register: s3_mount_stat

- name: Ensure /mnt/s3 is empty
  ansible.builtin.command:
    cmd: "rm -rf /mnt/s3/*"
  when: s3_mount_stat.stat.exists and s3_mount_stat.stat.isdir
  changed_when: false

- name: Mount S3 bucket for backups
  ansible.builtin.command:
    cmd: "s3fs {{ s3_bucket_name }} /mnt/s3 -o use_cache=/tmp -o nonempty -o passwd_file=/etc/passwd-s3fs"
  register: s3fs_mount_result
  retries: 3
  delay: 5
  until: s3fs_mount_result.rc == 0
  failed_when: s3fs_mount_result.rc != 0
  changed_when: s3fs_mount_result.rc == 0

- name: Verify S3 mount
  ansible.builtin.command:
    cmd: "mountpoint -q /mnt/s3"
  register: mount_check
  changed_when: false
  failed_when: mount_check.rc != 0

- name: Create required directory in S3 bucket
  ansible.builtin.command:
    cmd: "mkdir -p /mnt/s3/{{ app_name }}/backups-s3"
  when: mount_check.rc == 0
  args:
    creates: "/mnt/s3/{{ app_name }}/backups-s3"

- name: Stop Jenkins service
  ansible.builtin.systemd:
    name: jenkins
    state: stopped

- name: Make mount persistent
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "s3fs#{{ s3_bucket_name }} /mnt/s3 fuse _netdev,allow_other,use_cache=/tmp,passwd_file=/etc/passwd-s3fs 0 0"
    state: present

- name: Create symlink to S3
  ansible.builtin.file:
    src: /mnt/s3/jenkins/backups-s3
    dest: /var/lib/jenkins/backups-s3
    state: link

- name: Copy jenkins.yaml to /var/lib/jenkins
  ansible.builtin.copy:
    src: ./lib/jenkins.yaml
    dest: /var/lib/jenkins/jenkins.yaml
    owner: jenkins
    group: jenkins
    mode: '0644'

- name: Install Trivy security scanner
  ansible.builtin.get_url:
    url: https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
    dest: /tmp/trivy.deb
    mode: '0644'

- name: Install Trivy
  ansible.builtin.apt:
    deb: /tmp/trivy.deb

- name: Install Docker
  ansible.builtin.apt:
    name: docker.io
    state: present

- name: Ensure Jenkins user has access to Docker
  ansible.builtin.user:
    name: jenkins
    groups: docker
    append: true

- name: Set correct permissions for Docker socket
  ansible.builtin.file:
    path: /var/run/docker.sock
    mode: '0660'
    owner: root
    group: docker

- name: Start Jenkins service
  ansible.builtin.systemd:
    name: jenkins
    state: started
    enabled: true
